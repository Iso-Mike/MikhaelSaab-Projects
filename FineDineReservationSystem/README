Author
Mikhael Saab

Overview
The FineDine Reservation System is a robust and scalable software application designed for advanced restaurant management operations. It leverages structured data handling and efficient algorithmic solutions to optimize the management of patrons and their reservation details. The system is built on a foundation of modular programming principles, ensuring high maintainability and ease of future enhancements.

Features
  - Dynamic Data Management: Utilizes dynamic data structures, including linked lists, for efficient storage and retrieval of patron and reservation information. This ensures optimal memory usage and performance.
  - Linked List Implementation: Employs singly and doubly linked lists to manage data, allowing for efficient insertion, deletion, and traversal operations, crucial for real-time data updates and queries.
  - Algorithmic Efficiency: Implements sophisticated algorithms for data manipulation, offering fast and reliable access to reservation details and patron records.
  - Modular Design: Architecturally structured with a modular approach, separating user interface logic, data handling, and business logic into distinct components.
  - Robust Error Handling: Rigorously designed to handle edge cases and user input errors, guaranteeing a stable and reliable user experience.
  - Data Persistence: Equipped with functionalities for pre-loading initial data sets, paving the way for future integration with persistent storage solutions.

Source Files
  - main.c: Main program flow and user interface.
  - patrons.c: Manages patron-related functionalities.
  - resv.c: Handles reservation-related operations.
  - load.c: Loads initial data into the system.
  - restaurant.c: Core functions for restaurant management.

Header Files:
  - defs.h: Defines essential structures and constants used across the program.

How to Compile and Run
  - Compilation: gcc -Wall -std=c11 -o FineDineManager main.c patrons.c resv.c restaurant.c load.c
  - Execution: ./FineDineManager

Usage Instructions
  - Execute the Application: Run ./FineDineManager in the terminal to start the program.
  - Access Main Menu: Interact with the main menu to explore different functionalities.